!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports=["easy","medium","hard","expert","insane"]},function(e,t,n){const{makePuzzle:o}=n(2),r=n(0),{openDatabase:s,storePuzzle:l,countPuzzles:u}=n(5);async function i(e){const t=await Promise.all(r.map(t=>u(e,t)));t.some(e=>e<10)&&await async function(e,t){const n=[0,1,2,3,1/0],{puzzle:s,difficulty:u}=o();for(let o=0;o<r.length;o++){const i=n[o],c=r[o];if(u<=i){t[o]<100&&await l(e,c,s);break}}}(e,t);const n=t.reduce((e,t)=>Math.min(e,t),100);setTimeout(()=>i(e),n<4?100*n:1e3)}!async function(){i(await s())}()},function(e,t,n){const o=n(3),r=n(4),s=new Array(9).fill(0).map(()=>[]),l=new Array(9).fill(0).map(()=>[]),u=new Array(9).fill(0).map(()=>[]),i=new Array(81),c=new Array(81),a=new Array(81);for(let e=0;e<9;e++)for(let t=0;t<9;t++){const n=9*e+t;s[e][t]=n,l[t][e]=n,i[n]=e,c[n]=t;const o=Math.floor(e/3),r=Math.floor(t/3),f=e%3,d=t%3;u[3*o+r][3*f+d]=n,a[n]=3*o+r}for(let e=0;e<9;e++)Object.freeze(s[e]),Object.freeze(l[e]),Object.freeze(u[e]);Object.freeze(s),Object.freeze(l),Object.freeze(u),Object.freeze(i),Object.freeze(c),Object.freeze(a);class f{constructor(e=[],t=[]){this.values=new Array(81),this.potentials=new Array(81);for(let t=0;t<e.length;t++)this.values[t]=e[t];for(let e=0;e<t.length;e++)this.potentials[e]=t[e]}clone(){return new f(this.values,this.potentials)}}function d(e){const t=Math.floor(Math.random()*e.length);return e.splice(t,1)[0]}function h(e){const t=s[i[e]],n=l[c[e]],o=u[a[e]],r=new Set;for(let e=0;e<9;e++)r.add(t[e]),r.add(n[e]),r.add(o[e]);return r.delete(e),r}function p(e,t){const n=h(t);let r=new o(511);for(const t of n){const n=e[t];n&&(r=r.remove(n))}return r}function g(e,t,n){const o=[[],[],[],[],[],[],[],[],[]],r=[[],[],[],[],[],[],[],[],[]],s=[[],[],[],[],[],[],[],[],[]];let l=new Array(10);for(const u of t){o[i[u]].push(u),r[c[u]].push(u),s[a[u]].push(u);const t=e.potentials[u].values;if(t.length<l.length){if(0===t.length)return null;if(l=t.map(e=>({index:u,value:e})),n>0&&1===l.length)return{candidates:l,cost:1}}}const u=o.concat(r,s).filter(e=>e.length);let f=new Array(10);const d=[];for(const t of u){const n=t.reduce((t,n)=>{for(const o of e.potentials[n].values)t.has(o)||t.set(o,[]),t.get(o).push(n);return t},new Map);d.push(n);for(const[e,t]of n.entries())if(t.length<f.length&&(f=t.map(t=>({index:t,value:e})),1===f.length))return{candidates:f,cost:0}}return l.length<f.length?{candidates:l,setMaps:d,cost:1}:{candidates:f,setMaps:d,cost:0}}function v(e,t){const n={1:new Set,2:new Set,3:new Set,4:new Set,5:new Set,6:new Set,7:new Set,8:new Set,9:new Set};for(const o of t)for(const t of e.potentials[o].values)n[t].add(o);return n}function w(e,t){let n=!1;for(const o of u)for(let r=1;r<=9;r++){const u=t[r],a=o.filter(e=>u.has(e));if(a.length<2||a.length>3)continue;const f=i[a[0]],d=c[a[0]];let h=null;if(a.every(e=>i[e]===f)?h=s[f].filter(e=>u.has(e)&&!a.includes(e)):a.every(e=>c[e]===d)&&(h=l[d].filter(e=>u.has(e)&&!a.includes(e))),h&&h.length>0){n=!0;for(const n of h)e.potentials[n]=e.potentials[n].remove(r),t[r].delete(n)}}return n}function m(e,t){const n=s.concat(l);let o=!1;for(const r of n)for(let n=1;n<=9;n++){const s=t[n],l=r.filter(e=>s.has(e));if(l.length<2||l.length>3)continue;const i=a[l[0]];let c=null;if(l.every(e=>a[e]===i)&&(c=u[i].filter(e=>s.has(e)&&!l.includes(e))),c&&c.length>0){o=!0;for(const o of c)e.potentials[o]=e.potentials[o].remove(n),t[n].delete(o)}}return o}function b(e,t,n){let i=!1;const c=s.concat(l,u);for(const s of c){const l=s.filter(e=>t.has(e));if(l.length<=n)continue;const u=r(l.filter(t=>e.potentials[t].size<=n),n);for(const t of u){const r=new Set(t),s=t.reduce((t,n)=>t.union(e.potentials[n]),new o(0));if(s.size===n)for(const t of l)if(!r.has(t)){const n=e.potentials[t];e.potentials[t]=n.diff(s),i=i||!n.eq(e.potentials[t])}}}return i}function z(e,t,n){let s=!1;for(const l of t){const t=[...l.entries()];if(t.length<=n)continue;const u=r(t.filter(e=>e[1].length<=n),n);for(const t of u){const r=new Set(t.flatMap(e=>e[1]));if(r.size===n){const n=o.from(...t.map(e=>e[0]));for(const t of r){const o=e.potentials[t];e.potentials[t]=o.intersect(n),s=s||!e.potentials[t].eq(o)}}}}return s}function y(e,t){return e.reduce((e,n)=>{const o=n.reduce((e,n)=>(t.has(n)&&e.push(n),e),[]);return 2===o.length&&e.push(o),e},[])}function x(e,t,n,o,r,s){let l=!1;for(const u of n){const n=u.flat(),i=[...new Set(n.map(e=>o[e]))];if(i.length===u.length){const o=new Set(n),u=i.flatMap(e=>r[e]).filter(t=>null==e.values[t]&&!o.has(t));for(const n of u){const o=e.potentials[n];o.has(t)&&(l=!0,e.potentials[n]=o.remove(t),s.delete(n))}}}return l}function S(e,t,n){let o=!1;for(let u=1;u<=9;u++){const a=t[u],f=r(y(s,a),n);o=o||x(e,u,f,c,l,a);const d=r(y(l,a),n);o=o||x(e,u,d,i,s,a)}return o}function M(e,t=!1,n=!1){const o=new Set;for(let t=0;t<81;t++)null==e.values[t]&&(e.potentials[t]=p(e.values,t),o.add(t));const r={checkUnique:n,goFast:t,score:null,board:null,isUnique:!0,counts:{nakedSingle:0,hiddenSingle:0,lineGhost:0,boxGhost:0,nakedDouble:0,hiddenDouble:0,nakedTriple:0,hiddenTriple:0,nakedQuad:0,hiddenQuad:0,xwing:0,swordfish:0}};return function e(t,n,o,r){if(0===n.size){if(r.foundOne)r.checkUnique&&(r.isUnique=!1);else if(r.foundOne=!0,r.score=o,r.board=t,r.checkUnique)return!1;return!0}let s=null;for(;;){if(s=g(t,n,o),null==s)return!1;if(r.goFast)break;if(1===s.candidates.length){1===s.cost?r.counts.nakedSingle++:r.counts.hiddenSingle++;break}const e=v(t,n);if(w(t,e))o=Math.max(o,1),r.counts.lineGhost++;else if(m(t,e))o=Math.max(o,1),r.counts.boxGhost++;else if(b(t,n,2))o=Math.max(o,1),r.counts.nakedDouble++;else if(z(t,s.setMaps,2))o=Math.max(o,2),r.counts.hiddenDouble++;else if(b(t,n,3))o=Math.max(o,2),r.counts.nakedTriple++;else if(z(t,s.setMaps,3))o=Math.max(o,2),r.counts.hiddenTriple++;else if(b(t,n,4))o=Math.max(o,3),r.counts.nakedQuad++;else if(z(t,s.setMaps,4))o=Math.max(o,3),r.counts.hiddenQuad++;else if(S(t,e,2))o=Math.max(o,3),r.counts.xwing++;else{if(!S(t,e,3))break;o=Math.max(o,3),r.counts.swordfish++}}const{candidates:l,cost:u}=s;for(o=Math.max(o,u),l.length>1&&(o=Math.max(o,3)+l.length-1);0!==l.length;){const s=1===l.length,{index:u,value:i}=d(l),c=s?t:t.clone();c.values[u]=i;const a=s?n:new Set(n);a.delete(u);for(const e of h(u))c.potentials[e]&&(c.potentials[e]=c.potentials[e].remove(i));const f=e(c,a,o,r);if(f)return f}return!1}(e.clone(),o,0,r),{board:r.board,difficulty:r.score,counts:r.counts,isUnique:r.isUnique}}function j(e){return(e.lineGhost+e.boxGhost>0?1:0)+2*(e.nakedDouble+e.hiddenDouble)+3*(e.nakedTriple+e.hiddenTriple)+4*(e.nakedQuad+e.hiddenQuad)+4*(e.xwing+e.swordfish)}function k(){const e=function(){const e=new f,t=[1,2,3,4,5,6,7,8,9];e.values[0]=d(t),e.values[1]=d(t),e.values[2]=d(t);const n=[...t];e.values[9]=d(t),e.values[18]=d(t);const o=[...t,e.values[1],e.values[2]];e.values[10]=d(t),e.values[11]=d(t),e.values[19]=d(t),e.values[20]=d(t);for(let t=3;t<9;t++)e.values[t]=d(n),e.values[9*t]=d(o);return M(e,!0).board}(),{board:t,difficulty:n,counts:o}=function(e){let t=e.clone();const n=new Array(41).fill(0).map((e,t)=>t);for(;0!==n.length;){const e=d(n),o=t.clone();o.values[e]=null,o.values[80-e]=null,M(o,!0,!0).isUnique&&(t=o)}const{difficulty:o,counts:r}=M(t);return{board:t,difficulty:o,counts:r}}(e);return 3===n?function(e,t,n){let o=e.clone(),r=t;if(j(r)>6)return{puzzle:o.values,difficulty:3};for(let e=0;e<200;e++){let e=o.clone();for(let t=0;t<50;t++){const t=e.clone(),s=Math.floor(41*Math.random());t.values[s]?(t.values[s]=null,t.values[80-s]=null):(t.values[s]=n.values[s],t.values[80-s]=n.values[80-s]);const l=M(t,!1,!0);if(l.isUnique){e=t;const n=j(l.counts),s=j(r);3===l.difficulty&&n>s&&(o=e,r=l.counts)}}}return j(r)>6?{puzzle:o.values,difficulty:3}:k()}(t,o,e):{puzzle:t.values,difficulty:n}}e.exports={rowMap:s,columnMap:l,boxMap:u,indexToRow:i,indexToColumn:c,indexToBox:a,getNeighbors:h,makePuzzle:k,solvePuzzle:e=>M(new f(e),!0).board.values,fillNotes:(e,t)=>{for(let n=0;n<81;n++)null==e[n]&&(t[n]=p(e,n))}}},function(e,t){class n extends Number{add(e){return new n(this|1<<e-1)}remove(e){return new n(this&~(1<<e-1))}toggle(e){return new n(this^1<<e-1)}has(e){return!!(this&1<<e-1)}union(e){return new n(this|e)}intersect(e){return new n(this&e)}diff(e){return new n(this&~e)}get values(){let e=this;const t=[];for(let n=1;e;n++)1&e&&t.push(n),e>>=1;return t}get size(){let e=this,t=0;for(;e;)e&=e-1,t++;return t}eq(e){return this.valueOf()===e.valueOf()}toString(){return String.fromCharCode(this+32)}}n.from=function(...e){return e.reduce((e,t)=>e.add(t),new n)},n.fromString=function(e){return new n(e.charCodeAt(0)-32)},e.exports=n},function(e,t){e.exports=function(e,t){return function e(t,n,o,r,s){if(0===n)return s.push(r),s;for(let l=o;l+n<=t.length;l++)e(t,n-1,l+1,[...r,t[l]],s);return s}(e,t,0,[],[])}},function(e,t,n){const o=n(0);e.exports={openDatabase:function(){return new Promise((e,t)=>{const n=indexedDB.open("sudoku",8);n.onupgradeneeded=function(e){const t=e.target.result;for(const e of t.objectStoreNames)t.deleteObjectStore(e);for(const e of o)t.createObjectStore(e,{autoIncrement:!0})},n.onerror=t,n.onsuccess=function(){e(this.result)}})},storePuzzle:function(e,t,n){return new Promise((o,r)=>{const s=e.transaction([t],"readwrite").objectStore(t).add(n);s.onerror=r,s.onsuccess=o})},getPuzzle:function(e,t){return new Promise((n,o)=>{const r=e.transaction([t]).objectStore(t).openCursor();r.onerror=o,r.onsuccess=function(e){const t={id:e.target.result.key,puzzle:e.target.result.value};n(t)}})},deletePuzzle:function(e,t,n){return new Promise((o,r)=>{const s=e.transaction([t],"readwrite").objectStore(t).delete(n);s.onerror=r,s.onsuccess=o})},countPuzzles:function(e,t){return new Promise((n,o)=>{const r=e.transaction([t]).objectStore(t).count();r.onerror=o,r.onsuccess=function(e){n(e.target.result)}})}}}]);